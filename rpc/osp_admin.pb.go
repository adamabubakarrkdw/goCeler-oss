// Code generated by protoc-gen-go. DO NOT EDIT.
// source: osp_admin.proto

package rpc

import (
	context "context"
	fmt "fmt"
	entity "github.com/celer-network/goCeler/entity"
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type DepositState int32

const (
	DepositState_Deposit_NOT_FOUND DepositState = 0
	DepositState_Deposit_QUEUED    DepositState = 1
	DepositState_Deposit_SUBMITTED DepositState = 2
	DepositState_Deposit_SUCCEEDED DepositState = 3
	DepositState_Deposit_FAILED    DepositState = 4
)

var DepositState_name = map[int32]string{
	0: "Deposit_NOT_FOUND",
	1: "Deposit_QUEUED",
	2: "Deposit_SUBMITTED",
	3: "Deposit_SUCCEEDED",
	4: "Deposit_FAILED",
}

var DepositState_value = map[string]int32{
	"Deposit_NOT_FOUND": 0,
	"Deposit_QUEUED":    1,
	"Deposit_SUBMITTED": 2,
	"Deposit_SUCCEEDED": 3,
	"Deposit_FAILED":    4,
}

func (x DepositState) String() string {
	return proto.EnumName(DepositState_name, int32(x))
}

func (DepositState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a58c2d65cdc11488, []int{0}
}

// Next Tag: 3
type RegisterStreamRequest struct {
	PeerRpcAddress       string   `protobuf:"bytes,1,opt,name=peer_rpc_address,json=peerRpcAddress,proto3" json:"peer_rpc_address,omitempty"`
	PeerEthAddress       []byte   `protobuf:"bytes,2,opt,name=peer_eth_address,json=peerEthAddress,proto3" json:"peer_eth_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterStreamRequest) Reset()         { *m = RegisterStreamRequest{} }
func (m *RegisterStreamRequest) String() string { return proto.CompactTextString(m) }
func (*RegisterStreamRequest) ProtoMessage()    {}
func (*RegisterStreamRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a58c2d65cdc11488, []int{0}
}

func (m *RegisterStreamRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterStreamRequest.Unmarshal(m, b)
}
func (m *RegisterStreamRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterStreamRequest.Marshal(b, m, deterministic)
}
func (m *RegisterStreamRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterStreamRequest.Merge(m, src)
}
func (m *RegisterStreamRequest) XXX_Size() int {
	return xxx_messageInfo_RegisterStreamRequest.Size(m)
}
func (m *RegisterStreamRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterStreamRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterStreamRequest proto.InternalMessageInfo

func (m *RegisterStreamRequest) GetPeerRpcAddress() string {
	if m != nil {
		return m.PeerRpcAddress
	}
	return ""
}

func (m *RegisterStreamRequest) GetPeerEthAddress() []byte {
	if m != nil {
		return m.PeerEthAddress
	}
	return nil
}

// Next Tag: 5
type SendTokenRequest struct {
	DstAddr              string   `protobuf:"bytes,1,opt,name=dst_addr,json=dstAddr,proto3" json:"dst_addr,omitempty"`
	AmtWei               string   `protobuf:"bytes,2,opt,name=amt_wei,json=amtWei,proto3" json:"amt_wei,omitempty"`
	TokenAddr            string   `protobuf:"bytes,3,opt,name=token_addr,json=tokenAddr,proto3" json:"token_addr,omitempty"`
	Note                 *any.Any `protobuf:"bytes,4,opt,name=note,proto3" json:"note,omitempty"`
	DstNetId             uint64   `protobuf:"varint,5,opt,name=dst_net_id,json=dstNetId,proto3" json:"dst_net_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendTokenRequest) Reset()         { *m = SendTokenRequest{} }
func (m *SendTokenRequest) String() string { return proto.CompactTextString(m) }
func (*SendTokenRequest) ProtoMessage()    {}
func (*SendTokenRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a58c2d65cdc11488, []int{1}
}

func (m *SendTokenRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendTokenRequest.Unmarshal(m, b)
}
func (m *SendTokenRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendTokenRequest.Marshal(b, m, deterministic)
}
func (m *SendTokenRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendTokenRequest.Merge(m, src)
}
func (m *SendTokenRequest) XXX_Size() int {
	return xxx_messageInfo_SendTokenRequest.Size(m)
}
func (m *SendTokenRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SendTokenRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SendTokenRequest proto.InternalMessageInfo

func (m *SendTokenRequest) GetDstAddr() string {
	if m != nil {
		return m.DstAddr
	}
	return ""
}

func (m *SendTokenRequest) GetAmtWei() string {
	if m != nil {
		return m.AmtWei
	}
	return ""
}

func (m *SendTokenRequest) GetTokenAddr() string {
	if m != nil {
		return m.TokenAddr
	}
	return ""
}

func (m *SendTokenRequest) GetNote() *any.Any {
	if m != nil {
		return m.Note
	}
	return nil
}

func (m *SendTokenRequest) GetDstNetId() uint64 {
	if m != nil {
		return m.DstNetId
	}
	return 0
}

// Next Tag: 4
type SendTokenResponse struct {
	Status               int32    `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error                string   `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	PayId                string   `protobuf:"bytes,3,opt,name=pay_id,json=payId,proto3" json:"pay_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendTokenResponse) Reset()         { *m = SendTokenResponse{} }
func (m *SendTokenResponse) String() string { return proto.CompactTextString(m) }
func (*SendTokenResponse) ProtoMessage()    {}
func (*SendTokenResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a58c2d65cdc11488, []int{2}
}

func (m *SendTokenResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendTokenResponse.Unmarshal(m, b)
}
func (m *SendTokenResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendTokenResponse.Marshal(b, m, deterministic)
}
func (m *SendTokenResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendTokenResponse.Merge(m, src)
}
func (m *SendTokenResponse) XXX_Size() int {
	return xxx_messageInfo_SendTokenResponse.Size(m)
}
func (m *SendTokenResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SendTokenResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SendTokenResponse proto.InternalMessageInfo

func (m *SendTokenResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *SendTokenResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *SendTokenResponse) GetPayId() string {
	if m != nil {
		return m.PayId
	}
	return ""
}

// Next Tag: 6
type DepositRequest struct {
	// payment channel peer address
	PeerAddr string `protobuf:"bytes,1,opt,name=peer_addr,json=peerAddr,proto3" json:"peer_addr,omitempty"`
	// payment channel token address
	TokenAddr string `protobuf:"bytes,2,opt,name=token_addr,json=tokenAddr,proto3" json:"token_addr,omitempty"`
	// deposit to channel peer or self (default: false, to self)
	ToPeer bool `protobuf:"varint,3,opt,name=to_peer,json=toPeer,proto3" json:"to_peer,omitempty"`
	// deposit amount in wei
	AmtWei string `protobuf:"bytes,4,opt,name=amt_wei,json=amtWei,proto3" json:"amt_wei,omitempty"`
	// time (in seconds) allowed for OSP to wait and batch requests before submitting the on-chain transaction
	MaxWaitS             uint64   `protobuf:"varint,5,opt,name=max_wait_s,json=maxWaitS,proto3" json:"max_wait_s,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DepositRequest) Reset()         { *m = DepositRequest{} }
func (m *DepositRequest) String() string { return proto.CompactTextString(m) }
func (*DepositRequest) ProtoMessage()    {}
func (*DepositRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a58c2d65cdc11488, []int{3}
}

func (m *DepositRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DepositRequest.Unmarshal(m, b)
}
func (m *DepositRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DepositRequest.Marshal(b, m, deterministic)
}
func (m *DepositRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DepositRequest.Merge(m, src)
}
func (m *DepositRequest) XXX_Size() int {
	return xxx_messageInfo_DepositRequest.Size(m)
}
func (m *DepositRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DepositRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DepositRequest proto.InternalMessageInfo

func (m *DepositRequest) GetPeerAddr() string {
	if m != nil {
		return m.PeerAddr
	}
	return ""
}

func (m *DepositRequest) GetTokenAddr() string {
	if m != nil {
		return m.TokenAddr
	}
	return ""
}

func (m *DepositRequest) GetToPeer() bool {
	if m != nil {
		return m.ToPeer
	}
	return false
}

func (m *DepositRequest) GetAmtWei() string {
	if m != nil {
		return m.AmtWei
	}
	return ""
}

func (m *DepositRequest) GetMaxWaitS() uint64 {
	if m != nil {
		return m.MaxWaitS
	}
	return 0
}

// Next Tag: 4
type DepositResponse struct {
	Status               int32    `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error                string   `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	DepositId            string   `protobuf:"bytes,3,opt,name=deposit_id,json=depositId,proto3" json:"deposit_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DepositResponse) Reset()         { *m = DepositResponse{} }
func (m *DepositResponse) String() string { return proto.CompactTextString(m) }
func (*DepositResponse) ProtoMessage()    {}
func (*DepositResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a58c2d65cdc11488, []int{4}
}

func (m *DepositResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DepositResponse.Unmarshal(m, b)
}
func (m *DepositResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DepositResponse.Marshal(b, m, deterministic)
}
func (m *DepositResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DepositResponse.Merge(m, src)
}
func (m *DepositResponse) XXX_Size() int {
	return xxx_messageInfo_DepositResponse.Size(m)
}
func (m *DepositResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DepositResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DepositResponse proto.InternalMessageInfo

func (m *DepositResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *DepositResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *DepositResponse) GetDepositId() string {
	if m != nil {
		return m.DepositId
	}
	return ""
}

// Next Tag: 2
type QueryDepositRequest struct {
	DepositId            string   `protobuf:"bytes,1,opt,name=deposit_id,json=depositId,proto3" json:"deposit_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryDepositRequest) Reset()         { *m = QueryDepositRequest{} }
func (m *QueryDepositRequest) String() string { return proto.CompactTextString(m) }
func (*QueryDepositRequest) ProtoMessage()    {}
func (*QueryDepositRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a58c2d65cdc11488, []int{5}
}

func (m *QueryDepositRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryDepositRequest.Unmarshal(m, b)
}
func (m *QueryDepositRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryDepositRequest.Marshal(b, m, deterministic)
}
func (m *QueryDepositRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryDepositRequest.Merge(m, src)
}
func (m *QueryDepositRequest) XXX_Size() int {
	return xxx_messageInfo_QueryDepositRequest.Size(m)
}
func (m *QueryDepositRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryDepositRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryDepositRequest proto.InternalMessageInfo

func (m *QueryDepositRequest) GetDepositId() string {
	if m != nil {
		return m.DepositId
	}
	return ""
}

// Next Tag: 3
type QueryDepositResponse struct {
	DepositState         DepositState `protobuf:"varint,1,opt,name=deposit_state,json=depositState,proto3,enum=rpc.DepositState" json:"deposit_state,omitempty"`
	Error                string       `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *QueryDepositResponse) Reset()         { *m = QueryDepositResponse{} }
func (m *QueryDepositResponse) String() string { return proto.CompactTextString(m) }
func (*QueryDepositResponse) ProtoMessage()    {}
func (*QueryDepositResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a58c2d65cdc11488, []int{6}
}

func (m *QueryDepositResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryDepositResponse.Unmarshal(m, b)
}
func (m *QueryDepositResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryDepositResponse.Marshal(b, m, deterministic)
}
func (m *QueryDepositResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryDepositResponse.Merge(m, src)
}
func (m *QueryDepositResponse) XXX_Size() int {
	return xxx_messageInfo_QueryDepositResponse.Size(m)
}
func (m *QueryDepositResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryDepositResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryDepositResponse proto.InternalMessageInfo

func (m *QueryDepositResponse) GetDepositState() DepositState {
	if m != nil {
		return m.DepositState
	}
	return DepositState_Deposit_NOT_FOUND
}

func (m *QueryDepositResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

// Admin request to ask the receiving osp to open a channel with peer.
// Next tag: 6
type OspOpenChannelRequest struct {
	// Peer to open channel with the osp.
	PeerEthAddress []byte `protobuf:"bytes,1,opt,name=peer_eth_address,json=peerEthAddress,proto3" json:"peer_eth_address,omitempty"`
	// ETH or ERC20
	TokenType entity.TokenType `protobuf:"varint,2,opt,name=token_type,json=tokenType,proto3,enum=entity.TokenType" json:"token_type,omitempty"`
	// where the token is defined.
	TokenAddress []byte `protobuf:"bytes,3,opt,name=token_address,json=tokenAddress,proto3" json:"token_address,omitempty"`
	// Deposit from myself in wei in decimal
	SelfDepositAmtWei string `protobuf:"bytes,4,opt,name=self_deposit_amt_wei,json=selfDepositAmtWei,proto3" json:"self_deposit_amt_wei,omitempty"`
	// Deposit asking to peer in wei in decimal
	PeerDepositAmtWei    string   `protobuf:"bytes,5,opt,name=peer_deposit_amt_wei,json=peerDepositAmtWei,proto3" json:"peer_deposit_amt_wei,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OspOpenChannelRequest) Reset()         { *m = OspOpenChannelRequest{} }
func (m *OspOpenChannelRequest) String() string { return proto.CompactTextString(m) }
func (*OspOpenChannelRequest) ProtoMessage()    {}
func (*OspOpenChannelRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a58c2d65cdc11488, []int{7}
}

func (m *OspOpenChannelRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OspOpenChannelRequest.Unmarshal(m, b)
}
func (m *OspOpenChannelRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OspOpenChannelRequest.Marshal(b, m, deterministic)
}
func (m *OspOpenChannelRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OspOpenChannelRequest.Merge(m, src)
}
func (m *OspOpenChannelRequest) XXX_Size() int {
	return xxx_messageInfo_OspOpenChannelRequest.Size(m)
}
func (m *OspOpenChannelRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OspOpenChannelRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OspOpenChannelRequest proto.InternalMessageInfo

func (m *OspOpenChannelRequest) GetPeerEthAddress() []byte {
	if m != nil {
		return m.PeerEthAddress
	}
	return nil
}

func (m *OspOpenChannelRequest) GetTokenType() entity.TokenType {
	if m != nil {
		return m.TokenType
	}
	return entity.TokenType_INVALID
}

func (m *OspOpenChannelRequest) GetTokenAddress() []byte {
	if m != nil {
		return m.TokenAddress
	}
	return nil
}

func (m *OspOpenChannelRequest) GetSelfDepositAmtWei() string {
	if m != nil {
		return m.SelfDepositAmtWei
	}
	return ""
}

func (m *OspOpenChannelRequest) GetPeerDepositAmtWei() string {
	if m != nil {
		return m.PeerDepositAmtWei
	}
	return ""
}

// Admin request to build routing table.
// Next tag: 2
type BuildRoutingTableRequest struct {
	TokenAddress         []byte   `protobuf:"bytes,1,opt,name=token_address,json=tokenAddress,proto3" json:"token_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BuildRoutingTableRequest) Reset()         { *m = BuildRoutingTableRequest{} }
func (m *BuildRoutingTableRequest) String() string { return proto.CompactTextString(m) }
func (*BuildRoutingTableRequest) ProtoMessage()    {}
func (*BuildRoutingTableRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a58c2d65cdc11488, []int{8}
}

func (m *BuildRoutingTableRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuildRoutingTableRequest.Unmarshal(m, b)
}
func (m *BuildRoutingTableRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuildRoutingTableRequest.Marshal(b, m, deterministic)
}
func (m *BuildRoutingTableRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildRoutingTableRequest.Merge(m, src)
}
func (m *BuildRoutingTableRequest) XXX_Size() int {
	return xxx_messageInfo_BuildRoutingTableRequest.Size(m)
}
func (m *BuildRoutingTableRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildRoutingTableRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BuildRoutingTableRequest proto.InternalMessageInfo

func (m *BuildRoutingTableRequest) GetTokenAddress() []byte {
	if m != nil {
		return m.TokenAddress
	}
	return nil
}

// Admin request to clear expired pays.
// Next tag: 2
type ClearExpiredPaysRequest struct {
	TokenAddress         []byte   `protobuf:"bytes,1,opt,name=token_address,json=tokenAddress,proto3" json:"token_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClearExpiredPaysRequest) Reset()         { *m = ClearExpiredPaysRequest{} }
func (m *ClearExpiredPaysRequest) String() string { return proto.CompactTextString(m) }
func (*ClearExpiredPaysRequest) ProtoMessage()    {}
func (*ClearExpiredPaysRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a58c2d65cdc11488, []int{9}
}

func (m *ClearExpiredPaysRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClearExpiredPaysRequest.Unmarshal(m, b)
}
func (m *ClearExpiredPaysRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClearExpiredPaysRequest.Marshal(b, m, deterministic)
}
func (m *ClearExpiredPaysRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClearExpiredPaysRequest.Merge(m, src)
}
func (m *ClearExpiredPaysRequest) XXX_Size() int {
	return xxx_messageInfo_ClearExpiredPaysRequest.Size(m)
}
func (m *ClearExpiredPaysRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ClearExpiredPaysRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ClearExpiredPaysRequest proto.InternalMessageInfo

func (m *ClearExpiredPaysRequest) GetTokenAddress() []byte {
	if m != nil {
		return m.TokenAddress
	}
	return nil
}

// Admin request to confirm on-chain resolved pays.
// Next tag: 2
type ConfirmOnChainResolvedPaysRequest struct {
	TokenAddress         []byte   `protobuf:"bytes,1,opt,name=token_address,json=tokenAddress,proto3" json:"token_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConfirmOnChainResolvedPaysRequest) Reset()         { *m = ConfirmOnChainResolvedPaysRequest{} }
func (m *ConfirmOnChainResolvedPaysRequest) String() string { return proto.CompactTextString(m) }
func (*ConfirmOnChainResolvedPaysRequest) ProtoMessage()    {}
func (*ConfirmOnChainResolvedPaysRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a58c2d65cdc11488, []int{10}
}

func (m *ConfirmOnChainResolvedPaysRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfirmOnChainResolvedPaysRequest.Unmarshal(m, b)
}
func (m *ConfirmOnChainResolvedPaysRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfirmOnChainResolvedPaysRequest.Marshal(b, m, deterministic)
}
func (m *ConfirmOnChainResolvedPaysRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfirmOnChainResolvedPaysRequest.Merge(m, src)
}
func (m *ConfirmOnChainResolvedPaysRequest) XXX_Size() int {
	return xxx_messageInfo_ConfirmOnChainResolvedPaysRequest.Size(m)
}
func (m *ConfirmOnChainResolvedPaysRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfirmOnChainResolvedPaysRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ConfirmOnChainResolvedPaysRequest proto.InternalMessageInfo

func (m *ConfirmOnChainResolvedPaysRequest) GetTokenAddress() []byte {
	if m != nil {
		return m.TokenAddress
	}
	return nil
}

type TokenCidPair struct {
	TokenAddress         string   `protobuf:"bytes,1,opt,name=token_address,json=tokenAddress,proto3" json:"token_address,omitempty"`
	Cid                  string   `protobuf:"bytes,2,opt,name=cid,proto3" json:"cid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TokenCidPair) Reset()         { *m = TokenCidPair{} }
func (m *TokenCidPair) String() string { return proto.CompactTextString(m) }
func (*TokenCidPair) ProtoMessage()    {}
func (*TokenCidPair) Descriptor() ([]byte, []int) {
	return fileDescriptor_a58c2d65cdc11488, []int{11}
}

func (m *TokenCidPair) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TokenCidPair.Unmarshal(m, b)
}
func (m *TokenCidPair) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TokenCidPair.Marshal(b, m, deterministic)
}
func (m *TokenCidPair) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokenCidPair.Merge(m, src)
}
func (m *TokenCidPair) XXX_Size() int {
	return xxx_messageInfo_TokenCidPair.Size(m)
}
func (m *TokenCidPair) XXX_DiscardUnknown() {
	xxx_messageInfo_TokenCidPair.DiscardUnknown(m)
}

var xxx_messageInfo_TokenCidPair proto.InternalMessageInfo

func (m *TokenCidPair) GetTokenAddress() string {
	if m != nil {
		return m.TokenAddress
	}
	return ""
}

func (m *TokenCidPair) GetCid() string {
	if m != nil {
		return m.Cid
	}
	return ""
}

type PeerOsp struct {
	// eth addr of peer osp
	OspAddress string `protobuf:"bytes,1,opt,name=osp_address,json=ospAddress,proto3" json:"osp_address,omitempty"`
	// channels with the peer osp
	TokenCidPairs []*TokenCidPair `protobuf:"bytes,2,rep,name=token_cid_pairs,json=tokenCidPairs,proto3" json:"token_cid_pairs,omitempty"`
	// last update timestamp
	UpdateTs             uint64   `protobuf:"varint,3,opt,name=update_ts,json=updateTs,proto3" json:"update_ts,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PeerOsp) Reset()         { *m = PeerOsp{} }
func (m *PeerOsp) String() string { return proto.CompactTextString(m) }
func (*PeerOsp) ProtoMessage()    {}
func (*PeerOsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_a58c2d65cdc11488, []int{12}
}

func (m *PeerOsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PeerOsp.Unmarshal(m, b)
}
func (m *PeerOsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PeerOsp.Marshal(b, m, deterministic)
}
func (m *PeerOsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PeerOsp.Merge(m, src)
}
func (m *PeerOsp) XXX_Size() int {
	return xxx_messageInfo_PeerOsp.Size(m)
}
func (m *PeerOsp) XXX_DiscardUnknown() {
	xxx_messageInfo_PeerOsp.DiscardUnknown(m)
}

var xxx_messageInfo_PeerOsp proto.InternalMessageInfo

func (m *PeerOsp) GetOspAddress() string {
	if m != nil {
		return m.OspAddress
	}
	return ""
}

func (m *PeerOsp) GetTokenCidPairs() []*TokenCidPair {
	if m != nil {
		return m.TokenCidPairs
	}
	return nil
}

func (m *PeerOsp) GetUpdateTs() uint64 {
	if m != nil {
		return m.UpdateTs
	}
	return 0
}

// Admin request to list all peer osps.
// Next tag: 2
type PeerOspsResponse struct {
	// info of peer osps.
	PeerOsps             []*PeerOsp `protobuf:"bytes,1,rep,name=peer_osps,json=peerOsps,proto3" json:"peer_osps,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *PeerOspsResponse) Reset()         { *m = PeerOspsResponse{} }
func (m *PeerOspsResponse) String() string { return proto.CompactTextString(m) }
func (*PeerOspsResponse) ProtoMessage()    {}
func (*PeerOspsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a58c2d65cdc11488, []int{13}
}

func (m *PeerOspsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PeerOspsResponse.Unmarshal(m, b)
}
func (m *PeerOspsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PeerOspsResponse.Marshal(b, m, deterministic)
}
func (m *PeerOspsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PeerOspsResponse.Merge(m, src)
}
func (m *PeerOspsResponse) XXX_Size() int {
	return xxx_messageInfo_PeerOspsResponse.Size(m)
}
func (m *PeerOspsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PeerOspsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PeerOspsResponse proto.InternalMessageInfo

func (m *PeerOspsResponse) GetPeerOsps() []*PeerOsp {
	if m != nil {
		return m.PeerOsps
	}
	return nil
}

// cooperative withdraw/settle channel request
type ChannelOpRequest struct {
	Cid                  string   `protobuf:"bytes,1,opt,name=cid,proto3" json:"cid,omitempty"`
	Wei                  string   `protobuf:"bytes,2,opt,name=wei,proto3" json:"wei,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChannelOpRequest) Reset()         { *m = ChannelOpRequest{} }
func (m *ChannelOpRequest) String() string { return proto.CompactTextString(m) }
func (*ChannelOpRequest) ProtoMessage()    {}
func (*ChannelOpRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a58c2d65cdc11488, []int{14}
}

func (m *ChannelOpRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChannelOpRequest.Unmarshal(m, b)
}
func (m *ChannelOpRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChannelOpRequest.Marshal(b, m, deterministic)
}
func (m *ChannelOpRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChannelOpRequest.Merge(m, src)
}
func (m *ChannelOpRequest) XXX_Size() int {
	return xxx_messageInfo_ChannelOpRequest.Size(m)
}
func (m *ChannelOpRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ChannelOpRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ChannelOpRequest proto.InternalMessageInfo

func (m *ChannelOpRequest) GetCid() string {
	if m != nil {
		return m.Cid
	}
	return ""
}

func (m *ChannelOpRequest) GetWei() string {
	if m != nil {
		return m.Wei
	}
	return ""
}

type ChannelOpResponse struct {
	Status               int32    `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error                string   `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChannelOpResponse) Reset()         { *m = ChannelOpResponse{} }
func (m *ChannelOpResponse) String() string { return proto.CompactTextString(m) }
func (*ChannelOpResponse) ProtoMessage()    {}
func (*ChannelOpResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a58c2d65cdc11488, []int{15}
}

func (m *ChannelOpResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChannelOpResponse.Unmarshal(m, b)
}
func (m *ChannelOpResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChannelOpResponse.Marshal(b, m, deterministic)
}
func (m *ChannelOpResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChannelOpResponse.Merge(m, src)
}
func (m *ChannelOpResponse) XXX_Size() int {
	return xxx_messageInfo_ChannelOpResponse.Size(m)
}
func (m *ChannelOpResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ChannelOpResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ChannelOpResponse proto.InternalMessageInfo

func (m *ChannelOpResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *ChannelOpResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func init() {
	proto.RegisterEnum("rpc.DepositState", DepositState_name, DepositState_value)
	proto.RegisterType((*RegisterStreamRequest)(nil), "rpc.RegisterStreamRequest")
	proto.RegisterType((*SendTokenRequest)(nil), "rpc.SendTokenRequest")
	proto.RegisterType((*SendTokenResponse)(nil), "rpc.SendTokenResponse")
	proto.RegisterType((*DepositRequest)(nil), "rpc.DepositRequest")
	proto.RegisterType((*DepositResponse)(nil), "rpc.DepositResponse")
	proto.RegisterType((*QueryDepositRequest)(nil), "rpc.QueryDepositRequest")
	proto.RegisterType((*QueryDepositResponse)(nil), "rpc.QueryDepositResponse")
	proto.RegisterType((*OspOpenChannelRequest)(nil), "rpc.OspOpenChannelRequest")
	proto.RegisterType((*BuildRoutingTableRequest)(nil), "rpc.BuildRoutingTableRequest")
	proto.RegisterType((*ClearExpiredPaysRequest)(nil), "rpc.ClearExpiredPaysRequest")
	proto.RegisterType((*ConfirmOnChainResolvedPaysRequest)(nil), "rpc.ConfirmOnChainResolvedPaysRequest")
	proto.RegisterType((*TokenCidPair)(nil), "rpc.TokenCidPair")
	proto.RegisterType((*PeerOsp)(nil), "rpc.PeerOsp")
	proto.RegisterType((*PeerOspsResponse)(nil), "rpc.PeerOspsResponse")
	proto.RegisterType((*ChannelOpRequest)(nil), "rpc.ChannelOpRequest")
	proto.RegisterType((*ChannelOpResponse)(nil), "rpc.ChannelOpResponse")
}

func init() { proto.RegisterFile("osp_admin.proto", fileDescriptor_a58c2d65cdc11488) }

var fileDescriptor_a58c2d65cdc11488 = []byte{
	// 1291 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x56, 0xdd, 0x4e, 0x1b, 0x47,
	0x14, 0xee, 0xf2, 0xef, 0x83, 0x43, 0xec, 0xc5, 0x0e, 0x60, 0x20, 0xa1, 0x93, 0x14, 0x39, 0x91,
	0x6a, 0x57, 0x69, 0x14, 0xa9, 0x91, 0xda, 0x0a, 0x6c, 0xa7, 0x45, 0x6a, 0xe3, 0x64, 0x31, 0xa2,
	0xea, 0x45, 0x56, 0xc3, 0xee, 0xc1, 0xac, 0xb0, 0x77, 0x26, 0x33, 0x63, 0x88, 0xd5, 0x8b, 0x4a,
	0x79, 0x85, 0xde, 0x46, 0x7d, 0x83, 0x3e, 0x4d, 0x5f, 0xa1, 0x4f, 0xd1, 0xab, 0x6a, 0x66, 0xc7,
	0xce, 0xae, 0x31, 0x4a, 0xc3, 0xdd, 0xce, 0xcf, 0xf9, 0xbe, 0xef, 0x7c, 0x33, 0xe7, 0xcc, 0xc2,
	0x6d, 0x26, 0xb9, 0x4f, 0xc3, 0x7e, 0x14, 0xd7, 0xb8, 0x60, 0x8a, 0xb9, 0xb3, 0x82, 0x07, 0x95,
	0xad, 0x2e, 0x63, 0xdd, 0x1e, 0xd6, 0x29, 0x8f, 0xea, 0x34, 0x8e, 0x99, 0xa2, 0x2a, 0x62, 0xb1,
	0x4c, 0xb6, 0x54, 0x36, 0xec, 0xaa, 0x19, 0x9d, 0x0c, 0x4e, 0xeb, 0x34, 0x1e, 0xda, 0xa5, 0xcd,
	0xc9, 0x25, 0xec, 0x73, 0x35, 0x5a, 0xcc, 0x63, 0xac, 0xa2, 0xf1, 0xe8, 0x56, 0x1f, 0xa5, 0xa4,
	0x5d, 0x4c, 0x86, 0xe4, 0x1c, 0xca, 0x1e, 0x76, 0x23, 0xa9, 0x50, 0x1c, 0x2a, 0x81, 0xb4, 0xef,
	0xe1, 0x9b, 0x01, 0x4a, 0xe5, 0x56, 0xa1, 0xc0, 0x11, 0x85, 0x2f, 0x78, 0xe0, 0xd3, 0x30, 0x14,
	0x28, 0xe5, 0xba, 0xb3, 0xe3, 0x54, 0x73, 0xde, 0x8a, 0x9e, 0xf7, 0x78, 0xb0, 0x97, 0xcc, 0x8e,
	0x77, 0xa2, 0x3a, 0x1b, 0xef, 0x9c, 0xd9, 0x71, 0xaa, 0xf9, 0x64, 0x67, 0x4b, 0x9d, 0xd9, 0x9d,
	0xe4, 0x2f, 0x07, 0x0a, 0x87, 0x18, 0x87, 0x1d, 0x76, 0x8e, 0xf1, 0x88, 0x68, 0x03, 0x96, 0x42,
	0xa9, 0x4c, 0xa4, 0x25, 0x58, 0x0c, 0xa5, 0xd2, 0x21, 0xee, 0x1a, 0x2c, 0xd2, 0xbe, 0xf2, 0x2f,
	0x31, 0x32, 0x80, 0x39, 0x6f, 0x81, 0xf6, 0xd5, 0x31, 0x46, 0xee, 0x36, 0x80, 0xd2, 0x18, 0x49,
	0xd4, 0xac, 0x59, 0xcb, 0x99, 0x19, 0x13, 0x57, 0x85, 0xb9, 0x98, 0x29, 0x5c, 0x9f, 0xdb, 0x71,
	0xaa, 0xcb, 0x8f, 0x4b, 0xb5, 0xc4, 0x9d, 0xda, 0xc8, 0x9d, 0xda, 0x5e, 0x3c, 0xf4, 0xcc, 0x0e,
	0x77, 0x0b, 0x40, 0x93, 0xc7, 0xa8, 0xfc, 0x28, 0x5c, 0x9f, 0xdf, 0x71, 0xaa, 0x73, 0x9e, 0x96,
	0xf3, 0x02, 0xd5, 0x41, 0x48, 0x7e, 0x81, 0x62, 0x4a, 0xae, 0xe4, 0x2c, 0x96, 0xe8, 0xde, 0x81,
	0x05, 0xa9, 0xa8, 0x1a, 0x24, 0x76, 0xcc, 0x7b, 0x76, 0xe4, 0x96, 0x60, 0x1e, 0x85, 0x60, 0xc2,
	0x4a, 0x4d, 0x06, 0x6e, 0x19, 0x16, 0x38, 0x1d, 0x6a, 0xf0, 0x44, 0xe5, 0x3c, 0xa7, 0xc3, 0x83,
	0x90, 0xbc, 0x77, 0x60, 0xa5, 0x89, 0x9c, 0xc9, 0x48, 0x8d, 0x7c, 0xd8, 0x84, 0x9c, 0xb1, 0x31,
	0x65, 0xc4, 0x92, 0x9e, 0x30, 0x19, 0x65, 0x13, 0x9e, 0x99, 0x4c, 0x78, 0x0d, 0x16, 0x15, 0xf3,
	0xf5, 0x6e, 0x43, 0xb3, 0xe4, 0x2d, 0x28, 0xf6, 0x12, 0x31, 0xe3, 0xe0, 0x5c, 0xc6, 0xc1, 0x2d,
	0x80, 0x3e, 0x7d, 0xeb, 0x5f, 0xd2, 0x48, 0xf9, 0x72, 0x94, 0x78, 0x9f, 0xbe, 0x3d, 0xa6, 0x91,
	0x3a, 0x24, 0xaf, 0xe1, 0xf6, 0x58, 0xdd, 0x8d, 0xd2, 0xde, 0x06, 0x08, 0x13, 0x80, 0x0f, 0xa9,
	0xe7, 0xec, 0xcc, 0x41, 0x48, 0x9e, 0xc0, 0xea, 0xab, 0x01, 0x8a, 0xe1, 0x84, 0x05, 0xd9, 0x28,
	0x67, 0x32, 0x2a, 0x84, 0x52, 0x36, 0xca, 0x4a, 0x7b, 0x0a, 0xb7, 0x46, 0x61, 0x5a, 0x14, 0x9a,
	0xc8, 0x95, 0xc7, 0xc5, 0x9a, 0xe0, 0x41, 0xcd, 0x6e, 0x3e, 0xd4, 0x0b, 0x5e, 0x3e, 0x4c, 0x8d,
	0xa6, 0x4b, 0x27, 0xff, 0x3a, 0x50, 0x6e, 0x4b, 0xde, 0xe6, 0x18, 0x37, 0xce, 0x68, 0x1c, 0x63,
	0x6f, 0xb2, 0x24, 0xd2, 0x17, 0xdd, 0x99, 0x76, 0xd1, 0xdd, 0xaf, 0x46, 0xc7, 0xa5, 0x86, 0x1c,
	0x0d, 0xbc, 0x96, 0x63, 0xeb, 0xd0, 0x5c, 0xa7, 0xce, 0x90, 0xa3, 0x3d, 0x41, 0xfd, 0xe9, 0xde,
	0x87, 0x5b, 0x1f, 0x0e, 0x58, 0x03, 0xcf, 0x1a, 0xe0, 0xfc, 0xf8, 0x8c, 0x35, 0x6c, 0x1d, 0x4a,
	0x12, 0x7b, 0xa7, 0xfe, 0x28, 0xdb, 0xec, 0xd1, 0x16, 0xf5, 0x9a, 0x4d, 0x77, 0x2f, 0x39, 0xe5,
	0x3a, 0x94, 0x8c, 0xe2, 0xc9, 0x80, 0xf9, 0x24, 0x40, 0xaf, 0x65, 0x02, 0xc8, 0xf7, 0xb0, 0xbe,
	0x3f, 0x88, 0x7a, 0xa1, 0xc7, 0x06, 0x2a, 0x8a, 0xbb, 0x1d, 0x7a, 0xd2, 0xc3, 0x51, 0xfa, 0x57,
	0x24, 0x3a, 0x57, 0x25, 0x92, 0xef, 0x60, 0xad, 0xd1, 0x43, 0x2a, 0x5a, 0x6f, 0x79, 0x24, 0x30,
	0x7c, 0x49, 0x87, 0xf2, 0x93, 0xe2, 0x7f, 0x84, 0xcf, 0x1b, 0x2c, 0x3e, 0x8d, 0x44, 0xbf, 0xad,
	0xed, 0x8f, 0x74, 0xdd, 0xb1, 0xde, 0xc5, 0x0d, 0x90, 0x5a, 0x90, 0x37, 0x4e, 0x37, 0xa2, 0xf0,
	0x25, 0x8d, 0xc4, 0xf4, 0xa0, 0xdc, 0x84, 0xc3, 0x05, 0x98, 0x0d, 0xa2, 0xd0, 0x5e, 0x08, 0xfd,
	0x49, 0xde, 0x39, 0xb0, 0xa8, 0x4b, 0xa9, 0x2d, 0xb9, 0x7b, 0x0f, 0x96, 0x93, 0xbe, 0x9d, 0x06,
	0x00, 0x26, 0xf9, 0x28, 0xfc, 0x1b, 0xb8, 0x9d, 0x70, 0x04, 0x51, 0xe8, 0x73, 0x1a, 0x09, 0xdd,
	0x09, 0x67, 0xab, 0xcb, 0xf6, 0x2e, 0xa6, 0xf5, 0x78, 0x89, 0x1a, 0x3b, 0x92, 0xba, 0xfc, 0x07,
	0x3c, 0xa4, 0x0a, 0x7d, 0x95, 0x1c, 0xfe, 0x9c, 0xb7, 0x94, 0x4c, 0x74, 0x24, 0xf9, 0x16, 0x0a,
	0x56, 0x83, 0x1c, 0xdf, 0xfa, 0x87, 0xb6, 0x5f, 0x30, 0xc9, 0xb5, 0x14, 0xcd, 0x92, 0x37, 0x2c,
	0x76, 0x67, 0xd2, 0x3d, 0x74, 0x08, 0x79, 0x0a, 0x05, 0x7b, 0x95, 0xdb, 0x7c, 0xe4, 0xa1, 0xcd,
	0xd4, 0x19, 0x67, 0xaa, 0x67, 0x3e, 0x74, 0x5a, 0xfd, 0x49, 0xf6, 0xa0, 0x98, 0x8a, 0xbb, 0x49,
	0x23, 0x78, 0xf4, 0x1b, 0xe4, 0xd3, 0x15, 0xe8, 0x96, 0xa1, 0x68, 0xc7, 0xfe, 0x8b, 0x76, 0xc7,
	0x7f, 0xde, 0x3e, 0x7a, 0xd1, 0x2c, 0x7c, 0xe6, 0xba, 0xe3, 0x76, 0xe8, 0xbf, 0x3a, 0x6a, 0x1d,
	0xb5, 0x9a, 0x05, 0x27, 0xbd, 0xf5, 0xf0, 0x68, 0xff, 0xe7, 0x83, 0x4e, 0xa7, 0xd5, 0x2c, 0xcc,
	0x64, 0xa7, 0x1b, 0x8d, 0x56, 0xab, 0xd9, 0x6a, 0x16, 0x66, 0xd3, 0x08, 0xcf, 0xf7, 0x0e, 0x7e,
	0x6a, 0x35, 0x0b, 0x73, 0x8f, 0xdf, 0x03, 0xcc, 0xef, 0xe9, 0x47, 0xd6, 0xfd, 0xd3, 0x81, 0xdd,
	0xeb, 0xef, 0xd5, 0x71, 0xa4, 0xce, 0x46, 0xfe, 0xba, 0xbb, 0xc6, 0xc4, 0x8f, 0x5e, 0xc2, 0xca,
	0x9d, 0x2b, 0xcf, 0x4a, 0x4b, 0x3f, 0xba, 0xe4, 0xc9, 0xbb, 0xbf, 0xff, 0xf9, 0x63, 0xa6, 0x46,
	0x1e, 0xd6, 0xcd, 0xfb, 0x5e, 0xd7, 0xa7, 0x50, 0x0f, 0x12, 0x38, 0x9f, 0xc5, 0x81, 0xc6, 0xf3,
	0x85, 0x05, 0xf4, 0x39, 0x1d, 0xca, 0x67, 0xce, 0x23, 0xf7, 0x77, 0xd8, 0x9a, 0xac, 0x9b, 0x8c,
	0xaa, 0xad, 0x44, 0xd5, 0xf4, 0xd2, 0xba, 0x56, 0xcb, 0x43, 0xa3, 0xe5, 0x3e, 0xb9, 0x9b, 0xd1,
	0xa2, 0x41, 0x7c, 0x4c, 0x50, 0xc6, 0x02, 0x22, 0x28, 0x5e, 0xa9, 0x7c, 0x77, 0xdb, 0xb0, 0x5e,
	0xd7, 0x11, 0xae, 0xa5, 0xdd, 0x36, 0xb4, 0x6b, 0xc4, 0xb5, 0xb4, 0x82, 0x0d, 0x14, 0xd6, 0x4f,
	0x34, 0x8c, 0xa6, 0xea, 0x42, 0xc9, 0xc3, 0xe0, 0x62, 0x3f, 0xa0, 0x52, 0x59, 0xd8, 0x83, 0xf8,
	0x94, 0xb9, 0xab, 0x86, 0xcd, 0xce, 0x7c, 0x8c, 0x83, 0x18, 0x8e, 0x2d, 0xb2, 0x96, 0xe1, 0x10,
	0x18, 0x5c, 0xf8, 0x27, 0x1a, 0x58, 0x13, 0xbd, 0x86, 0xe5, 0x1f, 0x50, 0x8d, 0x3d, 0xbc, 0x06,
	0xaa, 0x52, 0x4e, 0x97, 0xcd, 0xb8, 0xc0, 0xc8, 0x8e, 0x61, 0xa8, 0x90, 0x72, 0xda, 0xbc, 0x71,
	0xc9, 0x69, 0xfc, 0x33, 0x58, 0xc9, 0xbe, 0x14, 0x6e, 0xc5, 0x40, 0x4d, 0x7d, 0x3e, 0xfe, 0x77,
	0x26, 0x86, 0x87, 0x71, 0xd4, 0x57, 0x45, 0xc7, 0x6b, 0xa6, 0x63, 0xc8, 0x8d, 0xff, 0x44, 0xdc,
	0x44, 0xef, 0xe4, 0x8f, 0x54, 0xe5, 0xce, 0xe4, 0xb4, 0xcd, 0x63, 0xd3, 0xe0, 0x97, 0x49, 0xc1,
	0xe2, 0x4b, 0x8c, 0x43, 0xd3, 0x7b, 0x34, 0x70, 0x1b, 0x16, 0x6d, 0xd9, 0x58, 0xfb, 0xb3, 0x4f,
	0x72, 0xa5, 0x94, 0x9d, 0xb4, 0x90, 0x1b, 0x06, 0x72, 0x95, 0xac, 0x58, 0x48, 0xfb, 0xbe, 0x68,
	0xc0, 0x10, 0xf2, 0xe9, 0x47, 0xda, 0x5d, 0x37, 0x00, 0x53, 0x5e, 0xfb, 0xca, 0xc6, 0x94, 0x15,
	0x8b, 0x7f, 0xcf, 0xe0, 0x6f, 0x90, 0x92, 0xc5, 0x7f, 0xa3, 0x37, 0xf9, 0x29, 0x96, 0x73, 0x58,
	0xc9, 0xfe, 0xb6, 0x5a, 0xe7, 0xa7, 0xfe, 0xcb, 0x5e, 0xeb, 0xfc, 0x17, 0x86, 0xe6, 0x1e, 0xa9,
	0xa4, 0x9d, 0x17, 0x16, 0x42, 0x1a, 0x08, 0x4d, 0xd6, 0x83, 0xd5, 0x06, 0x63, 0x1c, 0x05, 0x55,
	0xd1, 0x05, 0xea, 0xb2, 0x0c, 0x05, 0xbd, 0xb4, 0xc7, 0x30, 0xd9, 0x58, 0xed, 0x31, 0x5c, 0xe9,
	0x9b, 0x64, 0xd7, 0x90, 0xed, 0x90, 0x4d, 0x4b, 0x66, 0x4f, 0xb7, 0x1e, 0x30, 0xc6, 0x2f, 0x2d,
	0x66, 0x72, 0xa9, 0x8a, 0x29, 0xb6, 0x43, 0x54, 0xaa, 0x87, 0x9f, 0xca, 0xf5, 0xc0, 0x70, 0xdd,
	0x25, 0x1b, 0x53, 0xb8, 0xa4, 0x41, 0x7c, 0xe6, 0x3c, 0xda, 0xdf, 0xfd, 0xf5, 0x41, 0x37, 0x52,
	0x67, 0x83, 0x93, 0x5a, 0xc0, 0xfa, 0xf5, 0x00, 0x7b, 0x28, 0xbe, 0x8c, 0x51, 0x5d, 0x32, 0x71,
	0x5e, 0xef, 0xb2, 0x86, 0x1e, 0xd7, 0x05, 0x0f, 0x4e, 0x16, 0x8c, 0x6d, 0x5f, 0xff, 0x17, 0x00,
	0x00, 0xff, 0xff, 0x3e, 0x04, 0xe0, 0x9d, 0xb5, 0x0c, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AdminClient is the client API for Admin service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AdminClient interface {
	// ConfirmOnChainResolvedPaysWithPeerOsps instructs Osp to confirm on-chain resolved pays between itself and connected osps.
	ConfirmOnChainResolvedPaysWithPeerOsps(ctx context.Context, in *ConfirmOnChainResolvedPaysRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// ClearExpiredPaysWithPeerOsps instructs Osp to clear expired pays between itself and connected osps.
	ClearExpiredPaysWithPeerOsps(ctx context.Context, in *ClearExpiredPaysRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// BuildRoutingTable instructs Osp to build routing table.
	BuildRoutingTable(ctx context.Context, in *BuildRoutingTableRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// RecvBcastRoutingInfo gives the OSP (listener & router) the incoming
	// broadcast routing information (OSP server forwarding to the listener).
	RecvBcastRoutingInfo(ctx context.Context, in *RoutingRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// GetPeerOsps returns info of all peer osps.
	GetPeerOsps(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*PeerOspsResponse, error)
	// OspOpenChannel instructs Osp to open a state channel with a peer described in request.
	OspOpenChannel(ctx context.Context, in *OspOpenChannelRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// SendToken instructs the OSP to send token specified in SendTokenRequest.
	SendToken(ctx context.Context, in *SendTokenRequest, opts ...grpc.CallOption) (*SendTokenResponse, error)
	// Deposit instructs the OSP to deposit token specified in DepositRequest.
	Deposit(ctx context.Context, in *DepositRequest, opts ...grpc.CallOption) (*DepositResponse, error)
	// QueryDeposit asks OSP about the deposit status
	QueryDeposit(ctx context.Context, in *QueryDepositRequest, opts ...grpc.CallOption) (*QueryDepositResponse, error)
	// RegisterStream instructs the OSP to connect with other osp specified in RegisterStreamRequest.
	RegisterStream(ctx context.Context, in *RegisterStreamRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	CooperativeWithdraw(ctx context.Context, in *ChannelOpRequest, opts ...grpc.CallOption) (*ChannelOpResponse, error)
	CooperativeSettle(ctx context.Context, in *ChannelOpRequest, opts ...grpc.CallOption) (*ChannelOpResponse, error)
}

type adminClient struct {
	cc *grpc.ClientConn
}

func NewAdminClient(cc *grpc.ClientConn) AdminClient {
	return &adminClient{cc}
}

func (c *adminClient) ConfirmOnChainResolvedPaysWithPeerOsps(ctx context.Context, in *ConfirmOnChainResolvedPaysRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/rpc.Admin/ConfirmOnChainResolvedPaysWithPeerOsps", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminClient) ClearExpiredPaysWithPeerOsps(ctx context.Context, in *ClearExpiredPaysRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/rpc.Admin/ClearExpiredPaysWithPeerOsps", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminClient) BuildRoutingTable(ctx context.Context, in *BuildRoutingTableRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/rpc.Admin/BuildRoutingTable", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminClient) RecvBcastRoutingInfo(ctx context.Context, in *RoutingRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/rpc.Admin/RecvBcastRoutingInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminClient) GetPeerOsps(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*PeerOspsResponse, error) {
	out := new(PeerOspsResponse)
	err := c.cc.Invoke(ctx, "/rpc.Admin/GetPeerOsps", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminClient) OspOpenChannel(ctx context.Context, in *OspOpenChannelRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/rpc.Admin/OspOpenChannel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminClient) SendToken(ctx context.Context, in *SendTokenRequest, opts ...grpc.CallOption) (*SendTokenResponse, error) {
	out := new(SendTokenResponse)
	err := c.cc.Invoke(ctx, "/rpc.Admin/SendToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminClient) Deposit(ctx context.Context, in *DepositRequest, opts ...grpc.CallOption) (*DepositResponse, error) {
	out := new(DepositResponse)
	err := c.cc.Invoke(ctx, "/rpc.Admin/Deposit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminClient) QueryDeposit(ctx context.Context, in *QueryDepositRequest, opts ...grpc.CallOption) (*QueryDepositResponse, error) {
	out := new(QueryDepositResponse)
	err := c.cc.Invoke(ctx, "/rpc.Admin/QueryDeposit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminClient) RegisterStream(ctx context.Context, in *RegisterStreamRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/rpc.Admin/RegisterStream", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminClient) CooperativeWithdraw(ctx context.Context, in *ChannelOpRequest, opts ...grpc.CallOption) (*ChannelOpResponse, error) {
	out := new(ChannelOpResponse)
	err := c.cc.Invoke(ctx, "/rpc.Admin/CooperativeWithdraw", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminClient) CooperativeSettle(ctx context.Context, in *ChannelOpRequest, opts ...grpc.CallOption) (*ChannelOpResponse, error) {
	out := new(ChannelOpResponse)
	err := c.cc.Invoke(ctx, "/rpc.Admin/CooperativeSettle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AdminServer is the server API for Admin service.
type AdminServer interface {
	// ConfirmOnChainResolvedPaysWithPeerOsps instructs Osp to confirm on-chain resolved pays between itself and connected osps.
	ConfirmOnChainResolvedPaysWithPeerOsps(context.Context, *ConfirmOnChainResolvedPaysRequest) (*empty.Empty, error)
	// ClearExpiredPaysWithPeerOsps instructs Osp to clear expired pays between itself and connected osps.
	ClearExpiredPaysWithPeerOsps(context.Context, *ClearExpiredPaysRequest) (*empty.Empty, error)
	// BuildRoutingTable instructs Osp to build routing table.
	BuildRoutingTable(context.Context, *BuildRoutingTableRequest) (*empty.Empty, error)
	// RecvBcastRoutingInfo gives the OSP (listener & router) the incoming
	// broadcast routing information (OSP server forwarding to the listener).
	RecvBcastRoutingInfo(context.Context, *RoutingRequest) (*empty.Empty, error)
	// GetPeerOsps returns info of all peer osps.
	GetPeerOsps(context.Context, *empty.Empty) (*PeerOspsResponse, error)
	// OspOpenChannel instructs Osp to open a state channel with a peer described in request.
	OspOpenChannel(context.Context, *OspOpenChannelRequest) (*empty.Empty, error)
	// SendToken instructs the OSP to send token specified in SendTokenRequest.
	SendToken(context.Context, *SendTokenRequest) (*SendTokenResponse, error)
	// Deposit instructs the OSP to deposit token specified in DepositRequest.
	Deposit(context.Context, *DepositRequest) (*DepositResponse, error)
	// QueryDeposit asks OSP about the deposit status
	QueryDeposit(context.Context, *QueryDepositRequest) (*QueryDepositResponse, error)
	// RegisterStream instructs the OSP to connect with other osp specified in RegisterStreamRequest.
	RegisterStream(context.Context, *RegisterStreamRequest) (*empty.Empty, error)
	CooperativeWithdraw(context.Context, *ChannelOpRequest) (*ChannelOpResponse, error)
	CooperativeSettle(context.Context, *ChannelOpRequest) (*ChannelOpResponse, error)
}

// UnimplementedAdminServer can be embedded to have forward compatible implementations.
type UnimplementedAdminServer struct {
}

func (*UnimplementedAdminServer) ConfirmOnChainResolvedPaysWithPeerOsps(ctx context.Context, req *ConfirmOnChainResolvedPaysRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ConfirmOnChainResolvedPaysWithPeerOsps not implemented")
}
func (*UnimplementedAdminServer) ClearExpiredPaysWithPeerOsps(ctx context.Context, req *ClearExpiredPaysRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ClearExpiredPaysWithPeerOsps not implemented")
}
func (*UnimplementedAdminServer) BuildRoutingTable(ctx context.Context, req *BuildRoutingTableRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BuildRoutingTable not implemented")
}
func (*UnimplementedAdminServer) RecvBcastRoutingInfo(ctx context.Context, req *RoutingRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RecvBcastRoutingInfo not implemented")
}
func (*UnimplementedAdminServer) GetPeerOsps(ctx context.Context, req *empty.Empty) (*PeerOspsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPeerOsps not implemented")
}
func (*UnimplementedAdminServer) OspOpenChannel(ctx context.Context, req *OspOpenChannelRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OspOpenChannel not implemented")
}
func (*UnimplementedAdminServer) SendToken(ctx context.Context, req *SendTokenRequest) (*SendTokenResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendToken not implemented")
}
func (*UnimplementedAdminServer) Deposit(ctx context.Context, req *DepositRequest) (*DepositResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Deposit not implemented")
}
func (*UnimplementedAdminServer) QueryDeposit(ctx context.Context, req *QueryDepositRequest) (*QueryDepositResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryDeposit not implemented")
}
func (*UnimplementedAdminServer) RegisterStream(ctx context.Context, req *RegisterStreamRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterStream not implemented")
}
func (*UnimplementedAdminServer) CooperativeWithdraw(ctx context.Context, req *ChannelOpRequest) (*ChannelOpResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CooperativeWithdraw not implemented")
}
func (*UnimplementedAdminServer) CooperativeSettle(ctx context.Context, req *ChannelOpRequest) (*ChannelOpResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CooperativeSettle not implemented")
}

func RegisterAdminServer(s *grpc.Server, srv AdminServer) {
	s.RegisterService(&_Admin_serviceDesc, srv)
}

func _Admin_ConfirmOnChainResolvedPaysWithPeerOsps_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConfirmOnChainResolvedPaysRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServer).ConfirmOnChainResolvedPaysWithPeerOsps(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Admin/ConfirmOnChainResolvedPaysWithPeerOsps",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServer).ConfirmOnChainResolvedPaysWithPeerOsps(ctx, req.(*ConfirmOnChainResolvedPaysRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Admin_ClearExpiredPaysWithPeerOsps_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClearExpiredPaysRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServer).ClearExpiredPaysWithPeerOsps(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Admin/ClearExpiredPaysWithPeerOsps",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServer).ClearExpiredPaysWithPeerOsps(ctx, req.(*ClearExpiredPaysRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Admin_BuildRoutingTable_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BuildRoutingTableRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServer).BuildRoutingTable(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Admin/BuildRoutingTable",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServer).BuildRoutingTable(ctx, req.(*BuildRoutingTableRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Admin_RecvBcastRoutingInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RoutingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServer).RecvBcastRoutingInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Admin/RecvBcastRoutingInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServer).RecvBcastRoutingInfo(ctx, req.(*RoutingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Admin_GetPeerOsps_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServer).GetPeerOsps(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Admin/GetPeerOsps",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServer).GetPeerOsps(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Admin_OspOpenChannel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OspOpenChannelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServer).OspOpenChannel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Admin/OspOpenChannel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServer).OspOpenChannel(ctx, req.(*OspOpenChannelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Admin_SendToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServer).SendToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Admin/SendToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServer).SendToken(ctx, req.(*SendTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Admin_Deposit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DepositRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServer).Deposit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Admin/Deposit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServer).Deposit(ctx, req.(*DepositRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Admin_QueryDeposit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryDepositRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServer).QueryDeposit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Admin/QueryDeposit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServer).QueryDeposit(ctx, req.(*QueryDepositRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Admin_RegisterStream_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterStreamRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServer).RegisterStream(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Admin/RegisterStream",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServer).RegisterStream(ctx, req.(*RegisterStreamRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Admin_CooperativeWithdraw_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChannelOpRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServer).CooperativeWithdraw(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Admin/CooperativeWithdraw",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServer).CooperativeWithdraw(ctx, req.(*ChannelOpRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Admin_CooperativeSettle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChannelOpRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServer).CooperativeSettle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Admin/CooperativeSettle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServer).CooperativeSettle(ctx, req.(*ChannelOpRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Admin_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpc.Admin",
	HandlerType: (*AdminServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ConfirmOnChainResolvedPaysWithPeerOsps",
			Handler:    _Admin_ConfirmOnChainResolvedPaysWithPeerOsps_Handler,
		},
		{
			MethodName: "ClearExpiredPaysWithPeerOsps",
			Handler:    _Admin_ClearExpiredPaysWithPeerOsps_Handler,
		},
		{
			MethodName: "BuildRoutingTable",
			Handler:    _Admin_BuildRoutingTable_Handler,
		},
		{
			MethodName: "RecvBcastRoutingInfo",
			Handler:    _Admin_RecvBcastRoutingInfo_Handler,
		},
		{
			MethodName: "GetPeerOsps",
			Handler:    _Admin_GetPeerOsps_Handler,
		},
		{
			MethodName: "OspOpenChannel",
			Handler:    _Admin_OspOpenChannel_Handler,
		},
		{
			MethodName: "SendToken",
			Handler:    _Admin_SendToken_Handler,
		},
		{
			MethodName: "Deposit",
			Handler:    _Admin_Deposit_Handler,
		},
		{
			MethodName: "QueryDeposit",
			Handler:    _Admin_QueryDeposit_Handler,
		},
		{
			MethodName: "RegisterStream",
			Handler:    _Admin_RegisterStream_Handler,
		},
		{
			MethodName: "CooperativeWithdraw",
			Handler:    _Admin_CooperativeWithdraw_Handler,
		},
		{
			MethodName: "CooperativeSettle",
			Handler:    _Admin_CooperativeSettle_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "osp_admin.proto",
}
